var documenterSearchIndex = {"docs":
[{"location":"findpeaks1d.html#Manual","page":"Manual","title":"Manual","text":"","category":"section"},{"location":"findpeaks1d.html","page":"Manual","title":"Manual","text":"Modules = [FindPeaks1D]\nPages   = [\"FindPeaks1D.jl\"]","category":"page"},{"location":"findpeaks1d.html#FindPeaks1D.findpeaks1d-Union{Tuple{AbstractArray{T,1}}, Tuple{I}, Tuple{T}} where I<:Integer where T<:Real","page":"Manual","title":"FindPeaks1D.findpeaks1d","text":"findpeaks1d(x; \n            height=nothing, \n            distance=nothing, \n            prominence=nothing, \n            width=nothing, \n            wlen=nothing, \n            relheight=0.5)\n\nFind all local maxima in a 1-D signal with specified height, distance, prominence, width.\n\nArguments\n\nx: 1-D signal\nheight: the first element is the minimal and the second, if supplied, is the maximal peak height\ndistance: the minimal peak distance\nprominence: the first element is the minimal and the second, if supplied, is the maximal peak prominence\nwidth: the first element is the minimal and the second, if supplied, is the maximal peak width\nwlen: used for calculation of the peak prominence\nrelheight: used for calculation of peak width\n\nReturns\n\nPeak indices and properties\n\nExamples\n\njulia> x = [13, 12, 14, 18, 19, 19, 19, 15, 11, 6, 4, 10, 8, 13, 8, 13, 3, 18, 7, 4];\n\njulia> pkindices, pkproperties = findpeaks1d(x)\n([6, 12, 14, 16, 18], Dict{String,Any}())\n\njulia> pkindices, pkproperties = findpeaks1d(x, height=11)\n([6, 14, 16, 18], Dict{String,Any}(\"peak_heights\" => [19, 13, 13, 18]))\n\njulia> pkindices, pkproperties = findpeaks1d(x, height=11, distance=3)\n([6, 14, 18], Dict{String,Any}(\"peak_heights\" => [19, 13, 18]))\n\n\n\n\n\n","category":"method"},{"location":"findpeaks1d.html#FindPeaks1D.localmaxima1d-Union{Tuple{AbstractArray{T,1}}, Tuple{T}} where T<:Real","page":"Manual","title":"FindPeaks1D.localmaxima1d","text":"localmaxima1d(x)\n\nFinds all local maxima in a 1-D signal. The first and the last sample can't be maxima.\n\n\n\n\n\n","category":"method"},{"location":"findpeaks1d.html#FindPeaks1D.peakprominences1d-Union{Tuple{I}, Tuple{T}, Tuple{AbstractArray{T,1},AbstractArray{I,1}}, Tuple{AbstractArray{T,1},AbstractArray{I,1},Union{Nothing, I}}} where I<:Integer where T<:Real","page":"Manual","title":"FindPeaks1D.peakprominences1d","text":"peakprominences1(x, pkindices, wlen=nothing)\n\nCalculate the prominence of each peak in a 1-D signal.\n\nArguments\n\nx: 1-D signal\npkindices: peak indices\nwlen: a window length in samples to restrict peak finding to a window around the current peak\n\nReturns\n\nprominences: prominences for each peaks\nleftbases, rightbases: indices of the left and right of each peak for peaks' bases\n\n\n\n\n\n","category":"method"},{"location":"findpeaks1d.html#FindPeaks1D.peakwidths1d-Union{Tuple{I}, Tuple{T}, Tuple{AbstractArray{T,1},AbstractArray{I,1},Real,Any,Any,Any}} where I<:Integer where T<:Real","page":"Manual","title":"FindPeaks1D.peakwidths1d","text":"peakwidths1d(x, pkindices, relheight, prominences, leftbases, rightbases)\n\nCalculate the width of each peak in a 1-D signal.\n\nArguments\n\nx: 1-D signal\npkindices: peak indices\nrelheight: relative height with respect to the peak heights and prominences\nprominencedata: output of peakprominences1d\nleftbases, rightbases: indices of the left and right of each peak for peaks' bases\n\nReturns\n\nwidths: width for each peak in samples\nwidthheights: height at which the widths are evaluated\nleftips, rightips: interpolated left and right intersection points of a horizontal line at the respective widthheights\n\n\n\n\n\n","category":"method"},{"location":"findpeaks1d.html#FindPeaks1D.peakwidths1d-Union{Tuple{I}, Tuple{T}, Tuple{AbstractArray{T,1},AbstractArray{I,1}}, Tuple{AbstractArray{T,1},AbstractArray{I,1},Real}, Tuple{AbstractArray{T,1},AbstractArray{I,1},Real,Union{Nothing, Tuple}}, Tuple{AbstractArray{T,1},AbstractArray{I,1},Real,Union{Nothing, Tuple},Union{Nothing, I}}} where I<:Integer where T<:Real","page":"Manual","title":"FindPeaks1D.peakwidths1d","text":"peakwidths1d(x, pkindices, relheight=0.5, prominencedata=nothing, wlen=nothing)\n\nCalculate the width of each peak in a 1-D signal.\n\nArguments\n\nx: 1-D signal\npkindices: peak indices\nrelheight: relative height with respect to the peak heights and prominences\nwlen: a window length in samples to restrict peak finding to a window around the current peak\n\nReturns\n\nwidths: width for each peak in samples\nwidthheights: height at which the widths are evaluated\nleftips, rightips: interpolated left and right intersection points of a horizontal line at the \n\nrespective widthheights\n\n\n\n\n\n","category":"method"},{"location":"index.html#FindPeaks1D-Package","page":"FindPeaks1D Package","title":"FindPeaks1D Package","text":"","category":"section"},{"location":"index.html","page":"FindPeaks1D Package","title":"FindPeaks1D Package","text":"Finding peaks in a 1-D signal in Julia. The implementation is based on find_peaks in SciPy.","category":"page"}]
}
